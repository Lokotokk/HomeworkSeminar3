# Задача 16:
# Требуется вычислить, сколько раз встречается некоторое число X в массиве A.
# Пользователь в первой строке вводит натуральное число N – количество элементов в массиве.
# В последующих  строках записаны N целых чисел Ai.
# Последняя строка содержит число X.
# Попробуйте использовать метод count(), а также решите задачу с помощью своего алгоритма (без count).
# Замерьте время работы двух алгоритмов и сравните, подумайте, почему оно отличается.
# *Пример:*
# 5
#     1 2 3 4 5
#     3
#     -> 1

a = []
n = int(input('Введите количество элементов в массиве: '))
for _ in range(n):
    a.append(int(input('введите значение элемента: ')))
print(*a)
x = int(input('Введите число X: '))
print(x)
count = a.count(x)
count = 0
# for i in a:
#     if i == x:
#         count += 1
print(f'-> {count}')

# Задача 18:
# Требуется найти в массиве A[1..N] самый близкий по величине элемент к заданному числу X.
# Пользователь в первой строке вводит натуральное число N – количество элементов в массиве.
# В последующих  строках записаны N целых чисел Ai.
# Последняя строка содержит число X
# *Пример:*
# 5
#     1 2 3 4 5
#     6
#     -> 5

a = []
n = int(input('Введите длину массива: '))
for _ in range(n):
    a.append(int(input('Введите значение элемента: ')))
print(*a)
x = int(input('Введите число X: '))
closest = a[0]
some_list = [0]
for i in a:
    if abs(x - i) == abs(x - closest) and i != a[0]:
        some_list = [i, closest]
    elif abs(x - i) < abs(x - closest):
        closest = i
if some_list == [0]:
    print(f'самый близкий элемент к заданному числу {closest}')
else:
    print(f'самые близкие по величине элементы к заданному числу {some_list}')

# Задача 20:
# * В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.
# В случае с английским алфавитом очки распределяются так:
# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.
# А русские буквы оцениваются так:
# А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка;
# Б, Г, Ё, Ь, Я – 3 очка;
# Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков;
# Ф, Щ, Ъ – 10 очков.
# Напишите программу, которая вычисляет стоимость введенного пользователем слова.
# Будем считать, что на вход подается только одно слово, которое содержит либо только английские,
# либо только русские буквы.
# *Пример:*
# ноутбук
#     12

# 1)
dictionary = {1:['А', 'В', 'Е', 'И', 'Н', 'О', 'Р', 'С', 'Т', 'A', 'E', 'I', 'O', 'U', 'L', 'N', 'S', 'T', 'R'],
              2:['Д', 'К', 'Л', 'М', 'П', 'У', 'D', 'G'],
              3:['Б', 'Г', 'Ё', 'Ь', 'Я', 'B', 'C', 'M', 'P'],
              4:['Й', 'Ы', 'F', 'H', 'V', 'W', 'Y'],
              5:['Ж', 'З', 'Х', 'Ц', 'Ч', 'K'],
              8:['Ш', 'Э', 'Ю', 'J', 'X'],
              10:['Ф', 'Щ', 'Ъ', 'Q', 'Z']}
word_l = input('Введите слово: ')
word = word_l.upper()
count = 0
for i in word:
    for k, v in dictionary.items():
        if i in v:
            count += k
print(f"стоимость = {count}")

# 2)
list_1 = ['А', 'В', 'Е', 'И', 'Н', 'О', 'Р', 'С', 'Т', 'A', 'E', 'I', 'O', 'U', 'L', 'N', 'S', 'T', 'R']
list_2 = ['Д', 'К', 'Л', 'М', 'П', 'У', 'D', 'G']
list_3 = ['Б', 'Г', 'Ё', 'Ь', 'Я', 'B', 'C', 'M', 'P']
list_4 = ['Й', 'Ы', 'F', 'H', 'V', 'W', 'Y']
list_5 = ['Ж', 'З', 'Х', 'Ц', 'Ч', 'K']
list_8 = ['Ш', 'Э', 'Ю', 'J', 'X']
list_10 = ['Ф', 'Щ', 'Ъ', 'Q', 'Z']
cost_1 = 0
cost_2 = 0
cost_3 = 0
cost_4 = 0
cost_5 = 0
cost_8 = 0
cost_10 = 0
word_l = input('Введите слово: ')
word = word_l.upper()
for i in word:
    for j in list_1:
        if i == j:
            cost_1 +=1
    for k in list_2:
        if i == k:
            cost_2 +=2
    for a in list_3:
        if i == a:
            cost_3 +=3
    for b in list_4:
        if i == b:
            cost_4 +=4
    for c in list_5:
        if i == c:
            cost_5 +=5
    for d in list_8:
        if i == d:
            cost_8 +=8
    for e in list_10:
        if i == e:
            cost_10 +=10
print(f'стоимость = {cost_1 + cost_2 + cost_3 + cost_4 + cost_5 + cost_8 + cost_10}')
